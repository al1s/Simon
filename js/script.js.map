{"version":3,"sources":["script.js"],"names":["window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","App","oCancelAnimationFrame","start","msCancelAnimationFrame","originalSimonSounds","UL","webkitRequestCancelAnimationFrame","UR","mozRequestCancelAnimationFrame","LL","oRequestCancelAnimationFrame","LR","msRequestCancelAnimationFrame","id","clearTimeout","this","soundLib","fanfareSounds","G1","C2","G2","fanfareSeq","stepsInGame","currentNoteInStep","tempo","strictMode","reactionDelay","E2","messageError","messageStop","gameButtonNames","notesInQueue","lastNoteToDraw","requestId","playSequence","handleStart","playSound","setStrictMode","handleGameState","draw","messageWin","log","debug","step","note","time","bind","ndx","repeatSequence","stringify","playPhrase","sequence","forEach","console","slice","_this","playInTime","JSON","item","_typeof","_this2","push","randomRange","arr","Math","floor","random","reduce","prev","current","length","generateSequence","_this3","syncMessage","Array","fill","undefined","keys","currentStep","handleWin","e","_this4","UI","listen","soundButtons","trace","addEventListener","changeStyle","elm","classList","document","querySelectorAll","startBtn","toggle","repeatBtn","querySelector","strictBtn","getElementByName","getNote","btn","split","_this5","notePressed","name","target","_this6","value","togglePressedState","messageElm","currentNote","message","_this7","currentTime","context","splice","init","AudioContext","createGain","oscillator","connect","gainNode","gain","setValueAtTime","linearRampToValueAtTime","stopAtTime","SoundGen","setLevel","webkitAudioContext","createOscillator","destination","type","setup","frequency","exponentialRampToValueAtTime","stop","Object","assign"],"mappings":"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","file":"script.js","sourcesContent":["/* eslint no-var: 0 */\n/* eslint vars-on-top: 0 */\n/* eslint prefer-const: 0 */\n/* eslint arrow-parens: 0 */\n/* eslint no-restricted-syntax: 0 */\n\n/*\n  +(game engine) implement sequence generator;\n  +(game engine) implement game loop;\n  +(UI) add control panel;\n  +(UI) conditions to stop requestAnimationFrame loop;\n  +(UI) make UI elements wait till current routine executes;\n  (Improvement) add tempo control to UI;\n\n*/\n\n/* Notes and game flow\nTo implement accessible game I need to assing special keyboard layout\nto game process - map mouse gestures to keys;\n\nButtons in game:\nOn/Off\nRepeat\nStrict\n\nGame process:\n1. On Start game load the game engine.\n2. Choose a random sequence and keep it as current.\n3. Save current game position - 1. \n4. Play sequence from beginning to the current position inclusive.\n5. Wait for user input.\n6. Compare each entered element with corresponding element in sequence.\n7. On error: show message; buzz.\n8. On success: move current position one element right; repeat from step 3.\n8. On success in strict mode: repeat from step 2.\n*/\n\n/*\nUL: E -  164.814 (octave lower)\nUR: A -  440\nLL: C# - 277.18\nLR: E -  329.628\n*/\n\n// First, let's shim the requestAnimationFrame API, with a setTimeout fallback\nwindow.requestAnimFrame = (() => {\n  return (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    (callback => window.setTimeout(callback, 1000 / 60))\n  );\n})();\n\nwindow.cancelAnimFrame = (() => {\n  return (\n    window.cancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.oCancelAnimationFrame ||\n    window.msCancelAnimationFrame ||\n    window.cancelRequestAnimationFrame ||\n    window.webkitRequestCancelAnimationFrame ||\n    window.mozRequestCancelAnimationFrame ||\n    window.oRequestCancelAnimationFrame ||\n    window.msRequestCancelAnimationFrame ||\n    (id => clearTimeout(id))\n  );\n})();\n\nvar App = {\n  start() {\n    this.originalSimonSounds = {\n      UL: 164.814,\n      UR: 440,\n      LL: 277.18,\n      LR: 329.628,\n    };\n    this.simonSwipeSounds = {\n      UL: 523.251, // 783.991 - original\n      UR: 329.628,\n      LL: 261.63,\n      LR: 391.995,\n    };\n    this.soundLib = this.simonSwipeSounds;\n    this.fanfareSounds = {\n      G1: 392.0,\n      C2: 523.251,\n      E2: 659.255,\n      G2: 783.99,\n    };\n    this.fanfareSeq = [\n      ['G1', 0.25],\n      ['C2', 0.25],\n      ['E2', 0.25],\n      ['G2', 0.5],\n      ['E2', 0.25],\n      [['C2', 'E2', 'G2'], 0.5],\n    ];\n    // this.stepsInGame = 20;\n    this.stepsInGame = 3;\n    this.currentStep = 1;\n    this.currentNoteInStep = 1;\n    this.tempo = 120;\n    this.strictMode = false;\n    this.reactionDelay = 1 * 1000;\n    this.messageError = '!!';\n    this.messageStop = '--';\n    this.messageWin = '00';\n    this.gameButtonNames = ['UR', 'LR', 'LL', 'UL'];\n\n    // utility\n    this.notesInQueue = [];\n    this.lastNoteToDraw = '';\n    this.requestId = -1;\n    this.playSequence = this.playSequence.bind(this);\n    this.repeatSequence = this.repeatSequence.bind(this);\n    this.playPhrase = this.playPhrase.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.playSound = this.playSound.bind(this);\n    this.setStrictMode = this.setStrictMode.bind(this);\n    this.handleGameState = this.handleGameState.bind(this);\n    this.draw = this.draw.bind(this);\n  },\n\n  playSequence(sequence, step) {\n    log.debug(`Playing sequence on step ${step}`);\n    sequence.slice(0, step).forEach((note, ndx) => {\n      this.notesInQueue.push({\n        note,\n        time: ndx * 60 / this.tempo + this.context.currentTime,\n      });\n      this.playInTime(this.soundLib[note], ndx * 60 / this.tempo);\n    });\n    log.debug(JSON.stringify(this.notesInQueue));\n    this.requestId = window.requestAnimFrame(this.draw);\n  },\n\n  playPhrase(sequence) {\n    log.debug('Playing musical phrase');\n    let time = 0;\n    sequence.forEach((note, ndx) => {\n      console.log(`note in phrase: ${note}`);\n      if (typeof note[0] !== 'object') {\n        this.playInTime(this.fanfareSounds[note[0]], time);\n        this.notesInQueue.push({\n          note: this.gameButtonNames[ndx > 3 ? ndx % 4 : ndx],\n          time: time + this.context.currentTime,\n        });\n      } else {\n        note[0].forEach(item => {\n          this.playInTime(this.fanfareSounds[item], time, time);\n          this.notesInQueue.push({\n            note: 'ALL',\n            time: time + this.context.currentTime,\n          });\n        });\n      }\n      time += note[1];\n    });\n    this.requestId = window.requestAnimFrame(this.draw);\n  },\n\n  randomRange(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  },\n\n  generateSequence(length) {\n    log.debug('Generating sequence');\n    let sequence = new Array(length).fill(undefined);\n    sequence.reduce((prev, current, ndx) => {\n      do {\n        current = this.randomRange(Object.keys(this.soundLib));\n      } while (prev === current);\n      sequence[ndx] = current;\n      return current;\n    }, '');\n    return sequence;\n  },\n\n  handleStart(e) {\n    this.currentStep = 1;\n    this.currentNoteInStep = 1;\n    this.sequence = this.generateSequence(this.stepsInGame);\n    this.syncMessage(this.messageStop);\n    setTimeout(() => {\n      this.syncMessage(this.currentStep);\n      this.playSequence(this.sequence, this.currentStep);\n    }, this.reactionDelay);\n  },\n\n  handleWin() {\n    this.playPhrase(this.fanfareSeq);\n  },\n\n  repeatSequence() {\n    this.playSequence(this.sequence, this.currentStep);\n  },\n};\n\nvar UI = {\n  listen() {\n    log.debug('Listening on UI');\n    let soundButtons = document.querySelectorAll('.buttonGame');\n    let startBtn = document.querySelector('#btnStart');\n    let repeatBtn = document.querySelector('#btnRepeat');\n    let strictBtn = document.querySelector('#btnStrict');\n    log.trace('Buttons selected:');\n    log.trace(soundButtons);\n    startBtn.addEventListener('click', this.handleStart);\n    soundButtons.forEach(btn =>\n      btn.addEventListener('click', this.handleGameState),\n    );\n    repeatBtn.addEventListener('click', this.repeatSequence);\n    strictBtn.addEventListener('click', this.setStrictMode);\n  },\n\n  changeStyle(elm) {\n    elm.classList.toggle('--blink');\n    setTimeout(() => elm.classList.toggle('--blink'), 200);\n  },\n\n  getElementByName(name) {\n    return document.querySelector(`#button_${name}`);\n  },\n\n  getNote(e) {\n    return e.target.id.split('_')[1];\n  },\n\n  handleGameState(e) {\n    this.playSound(e);\n    var notePressed = this.getNote(e);\n    if (this.sequence[this.currentNoteInStep - 1] === notePressed) {\n      log.debug('Bingo!');\n      if (this.currentNoteInStep === this.currentStep) {\n        if (this.currentStep === this.stepsInGame) {\n          this.syncMessage(this.messageWin);\n          setTimeout(() => this.handleWin(), this.reactionDelay);\n        } else {\n          this.currentStep += 1;\n          this.currentNoteInStep = 1;\n          this.syncMessage(this.currentStep);\n          setTimeout(\n            () => this.playSequence(this.sequence, this.currentStep),\n            this.reactionDelay,\n          );\n        }\n      } else this.currentNoteInStep += 1;\n    } else {\n      log.debug('Missed!');\n      this.syncMessage(this.messageError);\n\n      if (this.strictMode) {\n        setTimeout(() => this.handleStart(), this.reactionDelay);\n      } else {\n        setTimeout(\n          () => this.syncMessage(this.currentStep),\n          this.reactionDelay,\n        );\n      }\n    }\n  },\n\n  playSound(e) {\n    log.debug('Play sound on a mouse click');\n    log.trace(e);\n    let value = [this.getNote(e)];\n    this.playSequence([value], 1);\n  },\n\n  togglePressedState(e) {\n    e.target.classList.toggle('--pressed');\n  },\n\n  setStrictMode(e) {\n    this.strictMode = !this.strictMode;\n    this.togglePressedState(e);\n  },\n\n  syncMessage(message) {\n    let messageElm = document.querySelector('#messageElm');\n    messageElm.innerHTML = message;\n  },\n\n  draw() {\n    let currentTime = this.context.currentTime;\n    let currentNote;\n    log.trace(\n      `Inside this.draw() notesInQueue: ${JSON.stringify(this.notesInQueue)}`,\n    );\n    while (\n      this.notesInQueue.length > 0 &&\n      this.notesInQueue[0].time < currentTime\n    ) {\n      currentNote = this.notesInQueue[0].note;\n      this.notesInQueue.splice(0, 1);\n    }\n\n    log.debug(\n      `Styling button; currentNote: ${currentNote}, lastNote: ${\n        this.lastNoteToDraw\n      }`,\n    );\n    if (currentNote !== undefined && this.lastNoteToDraw !== currentNote) {\n      if (currentNote !== 'ALL') {\n        this.changeStyle(this.getElementByName(currentNote));\n        this.lastNoteToDraw = currentNote;\n      } else {\n        this.gameButtonNames.forEach(name =>\n          this.changeStyle(this.getElementByName(name)),\n        );\n      }\n    }\n    this.requestId = window.requestAnimFrame(this.draw);\n    if (this.notesInQueue.length === 0) {\n      window.cancelAnimationFrame(this.requestId);\n      this.lastNoteToDraw = '';\n      this.requestId = undefined;\n    }\n  },\n};\n\nvar SoundGen = {\n  init() {\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n  },\n\n  setup() {\n    this.oscillator = this.context.createOscillator();\n    this.gainNode = this.context.createGain();\n\n    this.oscillator.connect(this.gainNode);\n    this.gainNode.connect(this.context.destination);\n    this.oscillator.type = 'sine';\n  },\n\n  playInTime(value, time) {\n    this.setup();\n    log.debug(`Tone value: ${value}`);\n    this.oscillator.frequency.setValueAtTime(\n      value,\n      this.context.currentTime + time,\n    );\n    this.gainNode.gain.setValueAtTime(0, this.context.currentTime + time);\n    this.gainNode.gain.linearRampToValueAtTime(\n      1,\n      this.context.currentTime + time + 0.01,\n    );\n    this.oscillator.start(this.context.currentTime + time);\n    this.stopAtTime(time);\n  },\n\n  stopAtTime(time) {\n    this.gainNode.gain.exponentialRampToValueAtTime(\n      0.001,\n      this.context.currentTime + time + 1,\n    );\n    this.oscillator.stop(this.context.currentTime + time + 1);\n  },\n};\n\nlog.setLevel('debug');\nObject.assign(App, SoundGen, UI);\nApp.init();\nApp.start();\nApp.listen();\n"],"sourceRoot":"/source/"}