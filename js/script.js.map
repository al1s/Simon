{"version":3,"sources":["script.js"],"names":["App","init","UL","UR","originalSimonSounds","LR","simonSwipeSounds","this","stepsInGame","soundLib","playSound","bind","e","log","debug","trace","target","changeStyle","play","SoundGen","start","context","window","AudioContext","webkitAudioContext","setup","oscillator","createOscillator","gainNode","createGain","connect","destination","type","value","id","split","gain","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","stop","UI","listen","buttons","_this","document","querySelectorAll","elm","classList","setTimeout","btn","addEventListener","toggle"],"mappings":"aAiBA,IAAIA,IAAM,CACRC,KADQ,WAAND,KAAAA,oBAAM,CAAAE,GAAA,QAENC,GAAKC,IACHF,GAAI,OACJC,GAAI,SAEJE,KAAAA,iBAAI,CAJNH,GAAA,QAMAC,GAAKG,QACHJ,GAAI,OACJC,GAAI,SAEJE,KAAAA,SAAIE,KAAAD,iBAJkBC,KAAxBC,YAAA,GAMAD,KAAKE,YAAW,EAChBF,KAAKC,UAALD,KAAAG,UAAAC,KAAAJ,OAGDG,UAlBO,SAAAE,GAoBRF,IAAAA,MApBQ,+BAqBNG,IAAIC,MAAMF,GACVC,KAAIE,YAAJH,EAAAI,QACAT,KAAKU,KAAAA,GACLV,KAAKW,SAKLC,SAAW,CAAfC,MAAe,WACbA,KADaC,QAAA,IAAAC,OACLC,cAAAD,OAAAE,qBAIRC,MALa,WAMXlB,KAAKmB,WAAanB,KAAKc,QAAQM,mBAC/BpB,KAAKqB,SAAWrB,KAAKc,QAAQQ,aAE7BtB,KAAKmB,WAAWI,QAAQvB,KAAKqB,UAC7BrB,KAAKqB,SAASE,QAAQvB,KAAKc,QAAQU,aACnCxB,KAAKmB,WAAWM,KAAO,QAIvBd,KAfW,SAeXN,GACAL,KAAI0B,QACJpB,IAAIC,EAAJP,KAAAE,SAAAG,EAAyBqB,OAAzBC,GAAAC,MAAA,KAAA,IACAtB,IAAAC,MAAA,eAAAmB,GACA1B,KAAKqB,WAASQ,UAAKC,eAAkBJ,EAAKZ,KAAQiB,QAAlDA,aACA/B,KAAKqB,SAASQ,KAAKG,eAAAA,EAAAA,KAAnBlB,QAEEiB,aAEF/B,KAAKmB,SAAAA,KAAWN,wBAChB,EAzBWb,KAAAc,QAAAiB,YAAA,KA6BX/B,KAAKqB,WAASQ,MAAKI,KAAAA,QAAAA,aAInBjC,KAAKmB,KAAAA,KAALL,QAAqBiB,cALvBG,KA5Ba,WAqCXC,KAAKd,SAAAQ,KAAAI,6BACPG,KAASpC,KAAAc,QAAAiB,YAAA,GACPzB,KAAIC,WAAM2B,KAAAlC,KAAAc,QAAViB,YAAA,KAIAM,GAAAA,CAAgBD,OAAhBC,WAAgB,IAAAC,EAAAtC,KAAAM,IAAhBC,MAAA,mBANK,IAAA8B,EAAAE,SAAAC,iBAAA,eASP9B,IAAAA,MATO,qBAUL+B,IAAIC,MAAAA,GACJC,EAAAA,QAAW,SAAAC,GAAA,OAAAA,EAAAC,iBAAA,QAAAP,EAAAnC,cACZO,YANC2B,SAMDI,GAZHA,EAAAC,UAAAI,OAAA,WAWIH,WAAW,WAAA,OAAMF,EAAIC,UAAUI,OAAO,YAAY,OAOtDrD,IAAIoB,SAAJ,SACApB,OAAI2C,OAAJ3C,IAAAmB,SAAAuB,IAFA1C,IAAIC,OACJD,IAAIoB,QACJpB,IAAI2C","file":"script.js","sourcesContent":["/* eslint no-var: 0 */\n/* eslint vars-on-top: 0 */\n/* eslint prefer-const: 0 */\n/* eslint arrow-parens: 0 */\n\n/*\n  (game engine) implement sequence generator;\n  (UI) add control panel;\n\n*/\n\n/*\nUL: E -  164.814 (octave lower)\nUR: A -  440\nLL: C# - 277.18\nLR: E -  329.628\n*/\nvar App = {\n  init() {\n    this.originalSimonSounds = {\n      UL: 164.814,\n      UR: 440,\n      LL: 277.18,\n      LR: 329.628,\n    };\n    this.simonSwipeSounds = {\n      UL: 783.991,\n      UR: 329.628,\n      LL: 261.63,\n      LR: 391.995,\n    };\n    this.soundLib = this.simonSwipeSounds;\n    this.stepsInGame = 30;\n    this.currentStep = 1;\n    this.playSound = this.playSound.bind(this);\n  },\n\n  playSound(e) {\n    log.debug('Play sound on a mouse click');\n    log.trace(e);\n    this.changeStyle(e.target);\n    this.play(e);\n    this.stop();\n  },\n};\n\nvar SoundGen = {\n  start() {\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n  },\n\n  setup() {\n    this.oscillator = this.context.createOscillator();\n    this.gainNode = this.context.createGain();\n\n    this.oscillator.connect(this.gainNode);\n    this.gainNode.connect(this.context.destination);\n    this.oscillator.type = 'sine';\n  },\n\n  play(e) {\n    this.setup();\n    var value = this.soundLib[e.target.id.split('_')[1]];\n    log.debug(`Tone value: ${value}`);\n    this.oscillator.frequency.setValueAtTime(value, this.context.currentTime);\n    this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    this.gainNode.gain.linearRampToValueAtTime(\n      1,\n      this.context.currentTime + 0.01,\n    );\n    this.oscillator.start(this.context.currentTime);\n    this.stop(this.context.currentTime);\n  },\n\n  stop() {\n    this.gainNode.gain.exponentialRampToValueAtTime(\n      0.001,\n      this.context.currentTime + 1,\n    );\n    this.oscillator.stop(this.context.currentTime + 1);\n  },\n};\n\nvar UI = {\n  listen() {\n    log.debug('Listening on UI');\n    var buttons = document.querySelectorAll('.buttonGame');\n    log.trace('Buttons selected:');\n    log.trace(buttons);\n    buttons.forEach(btn => btn.addEventListener('click', this.playSound));\n  },\n\n  changeStyle(elm) {\n    elm.classList.toggle('--blink');\n    setTimeout(() => elm.classList.toggle('--blink'), 300);\n  },\n};\n\nlog.setLevel('debug');\nObject.assign(App, SoundGen, UI);\nApp.init();\nApp.start();\nApp.listen();\n"],"sourceRoot":"/source/"}